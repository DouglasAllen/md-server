{<img src="https://travis-ci.org/DouglasAllen/gem-equationoftime.svg?branch=master" alt="Build Status" />}[https://travis-ci.org/DouglasAllen/gem-equationoftime]

= equationoftime

Home    :: http://equationoftime.herokuapp.com/
Code    :: https://github.com/DouglasAllen/equationoftime
RDoc    :: http://rubydoc.info/gems/equationoftime/4.1.8/frames
Issues  :: https://github.com/DouglasAllen/equationoftime/issues


== DESCRIPTION:

Calculate Sunrise and Sunset. Now uses native C wrappers.
Lots of examples to play with for learning about Eot.

== Use the Gem patch:

  $ gem install eot

== Clone this repo

  $ git clone git@github.com:DouglasAllen/equationoftime.git
  $ cd equationoftime

== REQUIREMENTS:

To install gem dependencies

  $ bundle install

== INSTALL:

To build the extensions and test

  $ bundle exec rake

== DEVELOPERS:

Do your own tests with:

  $ guard

After checking out the source, this task will install any missing dependencies, run the tests/specs,
and generate the RDoc.

  $ bundle exec rake newb


Install this package as a system gem

  $ bundle exec rake install

== SYNOPSIS:

  $ irb --simple-prompt
  
>

  require "eot"
  eot = Eot.new
  eot.string_eot          # eot now
  eot.ajd                 # was initialized to time now
  
                          # wait a bit and try setting a new AJD
  eot.ajd               = DateTime.now.to_time.utc.to_datetime.ajd.to_f
                          # Was it different? Good. Do the rest.
  
  eot.string_eot          # nothing changes so...
  eot.ma_ta_set           # always recalculate @ma and @ta attributes
  eot.string_eot          # will be different than before
  
                          # check and set a new address                        
  geo                   = GeoLatLng.new
  geo.addr
                          # set new location
  geo.addr              = "houston, tx"
                               
  geo.set_coordinates     # set new coordinates
  
                          # set the Eot class attributes
  eot.latitude          = geo.lat  
  eot.longitude         = geo.lng
  
  date                  = DateTime.new(2014,11,07)      
  eot.ajd               = date.to_time.utc.to_datetime.jd.to_f
  
  # Be shure to set @ma and @ta when changing the date.
  eot.ma_ta_set           # recalculate @ma and @ta
  
  eot.sunrise_jd          # the date's sunrise as a jd
  #=> 2457174.027595831
  
  eot.sunset_jd           # the date's sunset as a jd
  #=> 2457174.479637306
  
  eot.sunrise_dt          # the date's sunrise as DateTime
  #=> #<DateTime: 2015-05-31T12:39:44+00:00 ((2457174j,45584s,279805422n),+0s,2299161j)>
  
  eot.sunset_dt           # the date's sunset as a DateTime
  #=> #<DateTime: 2015-05-31T23:30:40+00:00 ((2457174j,84640s,663254261n),+0s,2299161j)>
  
  eot.ajd += 1            # the days after today may be set
  eot.ma_ta_set           # recalculate @ma and @t
                          # just setting the ajd is not enough.  
  eot.ajd = 2451545.0     # ajd set to 2000-01-01 12:00
  eot.ma_ta_set           # all @ta values in the angle equations
                          # will be zero with this value of ajd.
                          # This is the J2000 constant and an
                          # epoch term.
  
  
== LICENSE:

(The MIT License)

Copyright (c) 2014

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
'Software'), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
